# spec/support用の型定義ファイル

# ResultFactoryクラス - テスト用のResultインスタンス作成
class ResultFactory
  def self.create_comprehensive_method_class_result: () -> Result
  def self.create_simple_class_result: (?class_name: String) -> Result

  private

  def self.create_result: (?definitions: Array[Result::definition_hash]) -> Result
  def self.create_custom_class_result: (class_name: String, ?methods: Array[Hash[Symbol, untyped]]) -> Result
  def self.build_basic_method: (String name, String return_type, ?parameters: Array[Hash[Symbol, String]], ?method_type: String, ?visibility: String, ?overloads: Array[Hash[Symbol, untyped]]) -> Hash[Symbol, untyped]
  def self.build_parametered_method: (String name, String return_type, Array[Hash[Symbol, String]] parameters, ?method_type: String, ?visibility: String, ?overloads: Array[Hash[Symbol, untyped]]) -> Hash[Symbol, untyped]
  def self.required_positional_param: (String name, String type) -> Hash[Symbol, String]

  # MethodParameterBuilderクラス - メソッドパラメーター構築
  class MethodParameterBuilder
    def self.build_methods: () -> Array[Hash[Symbol, untyped]]

    private

    def self.build_basic_method_hash: (String name, String return_type, ?Hash[Symbol, untyped] options) -> Hash[Symbol, untyped]
    def self.build_parametered_method_hash: (String name, String return_type, Array[Hash[Symbol, String]] parameters, ?Hash[Symbol, untyped] options) -> Hash[Symbol, untyped]
    def self.build_block_method_hash: (String name, String return_type, Array[Hash[Symbol, String]] parameters, Hash[Symbol, untyped] block_info, ?Hash[Symbol, untyped] options) -> Hash[Symbol, untyped]
  end

  # AllMethodParamsクラス - 全メソッドパラメーターデータ提供
  class AllMethodParams
    def self.all: () -> Array[Hash[Symbol, untyped]]

    private

    def self.basic_methods: () -> Array[Hash[Symbol, untyped]]
    def self.parametered_methods: () -> Array[Hash[Symbol, untyped]]
    def self.block_methods: () -> Array[Hash[Symbol, untyped]]
    def self.positional_methods: () -> Array[Hash[Symbol, untyped]]
    def self.keyword_methods: () -> Array[Hash[Symbol, untyped]]
    def self.special_methods: () -> Array[Hash[Symbol, untyped]]
    def self.simple_block_methods: () -> Array[Hash[Symbol, untyped]]
    def self.complex_block_methods: () -> Array[Hash[Symbol, untyped]]
  end
end