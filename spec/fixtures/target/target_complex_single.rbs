# 複雑な単一クラスのテスト用RBSファイル
class ComprehensiveClass
  def simple_method: () -> String
  def method_with_args: (String name, Integer age) -> String
  def method_with_optional: (String name, ?Integer age) -> String
  def method_with_keywords: (name: String, age: Integer) -> String
  def method_with_optional_keywords: (name: String, ?age: Integer) -> String
  def method_with_block: () { (String) -> void } -> Array[String]
  def method_with_splat: (*String args) -> Array[String]
  def method_with_rest_keywords: (**String options) -> Hash[String, String]
  def complex_method: (
    String name,
    ?Integer age,
    *String tags,
    **String options) { (String) -> void } -> Hash[String, String]

  def self.class_method: (String param) -> ComprehensiveClass
  def overloaded_method: (String) -> String
                       | (Integer) -> Integer
                       | () -> nil
  def union_return: () -> (String | Integer | nil)
  def generic_return: [T] (T value) -> Array[T]
  def void_method: (String message) -> void

  private
  def private_method: () -> String

  public
  def public_method: () -> String
end